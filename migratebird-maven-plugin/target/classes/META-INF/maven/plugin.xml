<?xml version="1.0" encoding="UTF-8"?>
<plugin>
  <name>migratebird-maven-plugin</name>
  <description>Migratebird: The database migration framework for Java.</description>
  <groupId>com.migratebird</groupId>
  <artifactId>migratebird-maven-plugin</artifactId>
  <version>1.0-SNAPSHOT</version>
  <goalPrefix>migratebird</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>updateDatabase</goal>
      <description>Task that updates the database to the latest version.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.UpdateDatabaseMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>allowOutOfSequenceExecutionOfPatches</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If this property is set to true, a patch script is allowed to be executed even if another script
with a higher index was already executed.</description>
        </parameter>
        <parameter>
          <name>autoCreateDbMaintainScriptsTable</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the autoCreateDbMaintainScriptsTable property. If set to true, the table MIGRATEBIRD_SCRIPTS will be created
automatically if it does not exist yet. If false, an exception is thrown, indicating how to create the table manually.
False by default.</description>
        </parameter>
        <parameter>
          <name>cleanDb</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Indicates whether the database should be &apos;cleaned&apos; before scripts are executed. If true, the
records of all database tables, except for the ones listed in &apos;migratebird.preserve.*&apos; or
&apos;dbMaintain.preserveDataOnly.*&apos; are deleted before and after executing the scripts. False by default.</description>
        </parameter>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>disableConstraints</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set to true, all foreign key and not null constraints of the database are automatically disabled before and
after the execution of the scripts. False by default.</description>
        </parameter>
        <parameter>
          <name>excludedQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All excluded qualifiers must be registered using the
qualifiers property. Scripts qualified with one of the excluded qualifiers will not be executed.</description>
        </parameter>
        <parameter>
          <name>fromScratchEnabled</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the fromScratchEnabled property, that indicates the database can be recreated from scratch if needed.
From-scratch recreation is needed in following cases:
&lt;ul&gt;
&lt;li&gt;A script that was already executed has been modified&lt;/li&gt;
&lt;li&gt;A new script has been added with an index number lower than the one of an already executed script&lt;/li&gt;
&lt;li&gt;An script that was already executed has been removed or renamed&lt;/li&gt;
&lt;/ul&gt;
If set to false, DbMaintain will give an error if one of these situations occurs. The default is false.</description>
        </parameter>
        <parameter>
          <name>includedQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All included qualifiers must be registered using the
qualifiers property. Only scripts which are qualified with one of the included qualifiers will be executed.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>patchQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The qualifier to use to determine whether a script is a patch script. Defaults to patch.
E.g. 01_#patch_myscript.sql</description>
        </parameter>
        <parameter>
          <name>postProcessingScriptDirectoryName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of directories and files in which the post processing database scripts are
located. Directories in this list are recursively search for files. Defaults to postprocessing</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>qualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All custom qualifiers that are used in script file names must
be declared.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>scriptArchiveDependencies</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines where the scripts can be found that must be executed on the database. Multiple dependencies may be
configured.

At least one scriptArchiveDependency or scriptLocation (can be both) must be defined.</description>
        </parameter>
        <parameter>
          <name>scriptEncoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Encoding to use when reading the script files. Defaults to ISO-8859-1</description>
        </parameter>
        <parameter>
          <name>scriptFileExtensions</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the scriptFileExtensions property, that defines the extensions of the files that are regarded to be database scripts.
The extensions should not start with a dot. The default is &apos;sql,ddl&apos;.</description>
        </parameter>
        <parameter>
          <name>scriptLocations</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines where the scripts can be found that must be executed on the database. Multiple locations may be
configured, separated by comma&apos;s. A script location can be a folder or a jar file. This property is required.

At least one scriptArchiveDependency or scriptLocation (can be both) must be defined.</description>
        </parameter>
        <parameter>
          <name>scriptParameterFile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the scriptParameterFile property. If set, the corresponding properties file will be loaded and all
occurrences of parameters in the script that match a property will be replaced by the corresponding property value.
Script parameters are formatted as in ${param}.</description>
        </parameter>
        <parameter>
          <name>updateSequences</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If set to true, all sequences and identity columns are set to a sufficiently high value, so that test data can be
inserted without having manually chosen test record IDs clashing with automatically generated keys.</description>
        </parameter>
        <parameter>
          <name>useLastModificationDates</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines whether the last modification dates of the scripts files can be used to determine whether the contents of a
script has changed. If set to true, DbMaintain will not look at the contents of scripts that were already
executed on the database, if the last modification date is still the same. If it did change, it will first calculate
the checksum of the file to verify that the content really changed. Setting this property to true improves performance:
if set to false the checksum of every script must be calculated for each run. True by default.</description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on migratebird-maven-plugin.&lt;br/&gt; Call &lt;pre&gt; mvn migratebird:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/pre&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
        <goal implementation="java.lang.String">${goal}</goal>
      </configuration>
    </mojo>
    <mojo>
      <goal>disableConstraints</goal>
      <description>Task that disables or drops all foreign key and not null constraints.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.DisableConstraintsMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>checkScriptUpdates</goal>
      <description>Performs a dry run of the database update. May be used to verify if there are any updates or in a test that fails
if it appears that an irregular script update was performed.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.CheckScriptUpdatesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>allowOutOfSequenceExecutionOfPatches</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If this property is set to true, a patch script is allowed to be executed even if another script
with a higher index was already executed.</description>
        </parameter>
        <parameter>
          <name>autoCreateDbMaintainScriptsTable</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the autoCreateDbMaintainScriptsTable property. If set to true, the table MIGRATEBIRD_SCRIPTS will be created
automatically if it does not exist yet. If false, an exception is thrown, indicating how to create the table manually.
False by default.</description>
        </parameter>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>excludedQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All excluded qualifiers must be registered using the
qualifiers property. Scripts qualified with one of the excluded qualifiers will not be executed.</description>
        </parameter>
        <parameter>
          <name>fromScratchEnabled</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the fromScratchEnabled property, that indicates the database can be recreated from scratch if needed.
From-scratch recreation is needed in following cases:
&lt;ul&gt;
&lt;li&gt;A script that was already executed has been modified&lt;/li&gt;
&lt;li&gt;A new script has been added with an index number lower than the one of an already executed script&lt;/li&gt;
&lt;li&gt;An script that was already executed has been removed or renamed&lt;/li&gt;
&lt;/ul&gt;
If set to false, DbMaintain will give an error if one of these situations occurs. The default is false.</description>
        </parameter>
        <parameter>
          <name>includedQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All included qualifiers must be registered using the
qualifiers property. Only scripts which are qualified with one of the included qualifiers will be executed.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>patchQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The qualifier to use to determine whether a script is a patch script. Defaults to patch.
E.g. 01_#patch_myscript.sql</description>
        </parameter>
        <parameter>
          <name>postProcessingScriptDirectoryName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of directories and files in which the post processing database scripts are
located. Directories in this list are recursively search for files. Defaults to postprocessing</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>qualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All custom qualifiers that are used in script file names must
be declared.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>scriptArchiveDependencies</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines where the scripts can be found that must be executed on the database. Multiple dependencies may be
configured.

At least one scriptArchiveDependency or scriptLocation (can be both) must be defined.</description>
        </parameter>
        <parameter>
          <name>scriptEncoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Encoding to use when reading the script files. Defaults to ISO-8859-1</description>
        </parameter>
        <parameter>
          <name>scriptFileExtensions</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the scriptFileExtensions property, that defines the extensions of the files that are regarded to be database scripts.
The extensions should not start with a dot. The default is &apos;sql,ddl&apos;.</description>
        </parameter>
        <parameter>
          <name>scriptLocations</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines where the scripts can be found that must be executed on the database. Multiple locations may be
configured, separated by comma&apos;s. A script location can be a folder or a jar file. This property is required.

At least one scriptArchiveDependency or scriptLocation (can be both) must be defined.</description>
        </parameter>
        <parameter>
          <name>useLastModificationDates</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines whether the last modification dates of the scripts files can be used to determine whether the contents of a
script has changed. If set to true, DbMaintain will not look at the contents of scripts that were already
executed on the database, if the last modification date is still the same. If it did change, it will first calculate
the checksum of the file to verify that the content really changed. Setting this property to true improves performance:
if set to false the checksum of every script must be calculated for each run. True by default.</description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>cleanDatabase</goal>
      <description>Task that removes the data of all database tables.
The MIGRATEBIRD_SCRIPTS table will not be cleaned.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.CleanDatabaseMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>updateSequences</goal>
      <description>This operation is also mainly useful for automated testing purposes. This operation sets all sequences and identity
columns to a minimum value. By default this value is 1000, but is can be configured with the
lowestAcceptableSequenceValue option. The updateDatabase operation offers an option to automatically update the
sequences after the scripts were executed.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.UpdateSequencesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>lowestAcceptableSequenceValue</name>
          <type>java.lang.Long</type>
          <required>false</required>
          <editable>true</editable>
          <description>Threshold indicating the minimum value of sequences. If sequences are updated, all sequences having a lower value than this
one are set to this value. Defaults to 1000.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>markErrorScriptReverted</goal>
      <description>Task that indicates that the failed script was manually reverted.
The script will be run again in the next update.
No scripts will be executed by this task.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.MarkErrorScriptRevertedMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>markDatabaseAsUpToDate</goal>
      <description>This operation updates the state of the database to indicate that all scripts have been executed, without actually
executing them. This can be useful when you want to start using DbMaintain on an existing database, or after having
fixed a problem directly on the database.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.MarkDatabaseAsUpToDateMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>autoCreateDbMaintainScriptsTable</name>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the autoCreateDbMaintainScriptsTable property. If set to true, the table MIGRATEBIRD_SCRIPTS will be created
automatically if it does not exist yet. If false, an exception is thrown, indicating how to create the table manually.
False by default.</description>
        </parameter>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>excludedQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All excluded qualifiers must be registered using the
qualifiers property. Scripts qualified with one of the excluded qualifiers will not be executed.</description>
        </parameter>
        <parameter>
          <name>includedQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All included qualifiers must be registered using the
qualifiers property. Only scripts which are qualified with one of the included qualifiers will be executed.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>qualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All custom qualifiers that are used in script file names must
be declared.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>scriptArchiveDependencies</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines where the scripts can be found that must be registered in the database. Multiple dependencies may be
configured.

At least one scriptArchiveDependency or scriptLocation (can be both) must be defined.</description>
        </parameter>
        <parameter>
          <name>scriptFileExtensions</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the scriptFileExtensions property, that defines the extensions of the files that are regarded to be database scripts.
The extensions should not start with a dot. The default is &apos;sql,ddl&apos;.</description>
        </parameter>
        <parameter>
          <name>scriptLocations</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines where the scripts can be found that must be registered in the database. Multiple locations may be
configured, separated by comma&apos;s. A script location can be a folder or a jar file.

At least one scriptArchiveDependency or scriptLocation (can be both) must be defined.</description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>markErrorScriptPerformed</goal>
      <description>Task that indicates that the failed script was manually performed.
The script will NOT be run again in the next update.
No scripts will be executed by this task.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.MarkErrorScriptPerformedMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>clearDatabase</goal>
      <description>Task that removes all database items like tables, views etc from the database and empties the MIGRATEBIRD_SCRIPTS table.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.migratebird.maven.plugin.ClearDatabaseMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>databases</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Database instance configuration.</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>createScriptArchive</goal>
      <description>Task that enables creating a jar file that packages all database update scripts. This jar can then be used as
input for the updateDatabase task to apply changes on a target database.
This way, database updates can be distributed as a deliverable, just like a war or ear file.
&lt;br/&gt;
The created jar file will contain all configuration concerning the scripts in the META-INF folder.
&lt;br/&gt;&lt;br/&gt;
This operation will hook into the package stage and will attach the generated archive to the build (so that it
is installed in the local repository). The archive will have the same artifact id and group id as configured in
the pom. An optional classifier can be configured also.

A typical usage would be to create a pom of packaging type pom and then add this pom to your scripts folder.
&lt;pre&gt;&lt;code&gt;
&amp;lt;project&amp;gt;
&amp;lt;groupId&amp;gt;mygroup&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;myScripts&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;version&amp;lt;/version&amp;gt;
&amp;lt;packaging&amp;gt;pom&amp;lt;/packaging&amp;gt;

&amp;lt;build&amp;gt;
&amp;lt;plugins&amp;gt;
&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;com.migratebird&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;migratebird-maven-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;version&amp;gt;-current migratebird version-&amp;lt;/version&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;databases&amp;gt;
&amp;lt;database&amp;gt;
&amp;lt;dialect&amp;gt;oracle&amp;lt;/dialect&amp;gt;
&amp;lt;driverClassName&amp;gt;oracle.jdbc.driver.OracleDriver&amp;lt;/driverClassName&amp;gt;
&amp;lt;userName&amp;gt;user&amp;lt;/userName&amp;gt;
&amp;lt;password&amp;gt;pass&amp;lt;/password&amp;gt;
&amp;lt;url&amp;gt;jdbc:oracle:thin:@//localhost:1521/XE&amp;lt;/url&amp;gt;
&amp;lt;schemaNames&amp;gt;TEST&amp;lt;/schemaNames&amp;gt;
&amp;lt;/database&amp;gt;
&amp;lt;/databases&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;executions&amp;gt;
&amp;lt;execution&amp;gt;
&amp;lt;goals&amp;gt;
&amp;lt;goal&amp;gt;createScriptArchive&amp;lt;/goal&amp;gt;
&amp;lt;/goals&amp;gt;
&amp;lt;/execution&amp;gt;
&amp;lt;/executions&amp;gt;
&amp;lt;/plugins&amp;gt;
&amp;lt;/plugin&amp;gt;
&amp;lt;/build&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

The installed artifact can then later be used as a scriptArchiveDependency in for example the updateDatabase task.
&lt;/br&gt;&lt;/br&gt;
You can also specify an explicit archive name. In that case, the archive will just be generated and not attached
to the build.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>package</phase>
      <implementation>com.migratebird.maven.plugin.CreateScriptArchiveMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>archiveFileName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Explicitly defines the target name for the generated script archive. By default, the current artifact id will be taken
(optionally appended with a classifier). If you explicitly set an archive file name, the artifact will no longer be
attached to the build (so not installed in the local repository).</description>
        </parameter>
        <parameter>
          <name>configFile</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>The DbMaintain configuration file
(common for native dbMaintain, through ant or this maven-plugin).</description>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <type>org.apache.maven.artifact.repository.ArtifactRepository</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>patchQualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The qualifier to use to determine whether a script is a patch script. Defaults to patch.
E.g. 01_#patch_myscript.sql</description>
        </parameter>
        <parameter>
          <name>postProcessingScriptDirectoryName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Comma separated list of directories and files in which the post processing database scripts are
located. Directories in this list are recursively search for files. Defaults to postprocessing</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>The maven project.</description>
        </parameter>
        <parameter>
          <name>qualifier</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>An optional qualifier for the artifact. This can be used if the archive is not the main artifact of the pom.</description>
        </parameter>
        <parameter>
          <name>qualifiers</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Optional comma-separated list of script qualifiers. All custom qualifiers that are used in script file names must
be declared.</description>
        </parameter>
        <parameter>
          <name>remoteRepositories</name>
          <type>java.util.List</type>
          <required>true</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>scriptEncoding</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Encoding to use when reading the script files. Defaults to ISO-8859-1</description>
        </parameter>
        <parameter>
          <name>scriptFileExtensions</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Sets the scriptFileExtensions property, that defines the extensions of the files that are regarded to be database scripts.
The extensions should not start with a dot. The default is &apos;sql,ddl&apos;.</description>
        </parameter>
        <parameter>
          <name>scriptLocations</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Defines where the scripts can be found that must be added to the jar file. Multiple locations may be
configured, separated by comma&apos;s. Only folder names can be provided. Defaults to the current folder.</description>
        </parameter>
      </parameters>
      <configuration>
        <remoteRepositories implementation="java.util.List" default-value="${project.remoteArtifactRepositories}"/>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <scriptLocations implementation="java.lang.String" default-value="${basedir}"/>
        <localRepository implementation="org.apache.maven.artifact.repository.ArtifactRepository" default-value="${localRepository}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.project.MavenProjectHelper</role>
          <field-name>mavenProjectHelper</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.resolver.ArtifactResolver</role>
          <field-name>resolver</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.artifact.factory.ArtifactFactory</role>
          <field-name>artifactFactory</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>com.migratebird</groupId>
      <artifactId>migratebird-core</artifactId>
      <type>jar</type>
      <version>1.0-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <type>jar</type>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>commons-dbutils</groupId>
      <artifactId>commons-dbutils</artifactId>
      <type>jar</type>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>ant</groupId>
      <artifactId>ant</artifactId>
      <type>jar</type>
      <version>1.6.5</version>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <type>jar</type>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
    <dependency>
      <groupId>backport-util-concurrent</groupId>
      <artifactId>backport-util-concurrent</artifactId>
      <type>jar</type>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-9-stable-1</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>1.5.15</version>
    </dependency>
  </dependencies>
</plugin>